# .github/workflows/terraform.yml
name: Terraform CI/CD

on:
  push:
    branches: [main]
    paths: ['**/*.tf', '**/*.tfvars']
  pull_request:
    paths: ['**/*.tf', '**/*.tfvars']
  workflow_dispatch:

permissions:
  contents: read
  id-token: write          # needed for AWS OIDC
  pull-requests: write     # allow reviewdog to add PR comments

concurrency:               # avoid overlapping runs on same ref
  group: terraform-${{ github.ref }}
  cancel-in-progress: true

env:
  TF_WORKING_DIR: .        # repo root; adjust if you move code

###############################################################################
# ── 1. PLAN JOB ──────────────────────────────────────────────────────────────
###############################################################################
jobs:
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      # ── SCM ───────────────────────────────────────────────────────────────
      - uses: actions/checkout@v4

      # ── AWS creds via OIDC ───────────────────────────────────────────────
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::590183969845:role/github-assume-role
          aws-region: us-east-1

      # ── Terraform CLI ────────────────────────────────────────────────────
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
          terraform_wrapper: false   # keep native CLI output

      # ── (Optional) provider plugin cache ─────────────────────────────────
      - name: Prepare plugin cache dir
        run: |
          mkdir -p ~/.terraform.d/plugin-cache
          echo 'plugin_cache_dir = "$HOME/.terraform.d/plugin-cache"' > ~/.terraformrc

      - name: Cache provider plugins
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      # ── Terraform workflow steps ─────────────────────────────────────────
      - name: Init
        run: terraform init -input=false

      - name: Format (check only)
        run: terraform fmt -recursive

      - name: Validate
        run: terraform validate

      # ── TFLint with PR annotations ───────────────────────────────────────
      - name: TFLint
        uses: reviewdog/action-tflint@v1
        with:
          reporter: github-pr-review
          working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Plan
        run: terraform plan -no-color -out=tfplan

      # ── Upload both plan and lock file ───────────────────────────────────
      - name: Upload plan & lockfile
        uses: actions/upload-artifact@v4
        with:
          name: tf-artifacts
          path: |
            ${{ env.TF_WORKING_DIR }}/tfplan
            ${{ env.TF_WORKING_DIR }}/.terraform.lock.hcl

###############################################################################
# ── 2. APPLY JOB (gated by Environment) ─────────────────────────────────────
###############################################################################
  apply:
    needs: plan
    runs-on: ubuntu-latest
    environment: prod          # require manual approval in repo settings
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - uses: actions/checkout@v4

      - name: Download plan & lockfile
        uses: actions/download-artifact@v4
        with:
          name: tf-artifacts
          path: ${{ env.TF_WORKING_DIR }}

      # ── AWS creds via OIDC ───────────────────────────────────────────────
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::590183969845:role/github-assume-role
          aws-region: us-east-1

      # ── Terraform CLI ────────────────────────────────────────────────────
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
          terraform_wrapper: false

      # ── Read‑only init to verify lockfile consistency ────────────────────
      - name: Init (lockfile read‑only)
        run: terraform init -input=false -lockfile=readonly

      # ── Apply the reviewed plan ──────────────────────────────────────────
      - name: Apply approved plan
        run: terraform apply -auto-approve -no-color tfplan
